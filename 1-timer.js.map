{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nconst invalidDateMessage = 'Please choose a date in the future';\nconst defaultTimerData = { days: 0, hours: 0, minutes: 0, seconds: 0 };\nconst datetimePickerInput = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst timerElements = document.querySelectorAll('.timer .field .value');\nlet timer = null;\nlet selectedDate = null;\n\nconst FLATPICKR_PICKER_OPTIONS = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const date = selectedDates[0];\n    console.log(date);\n    const isValid = validateDate(date);\n\n    if (isValid) {\n      switchDisable(startButton, false);\n      selectedDate = date;\n    } else {\n      switchDisable(startButton, true);\n      iziToast.error({\n        message: invalidDateMessage,\n        position: 'topRight',\n        iconColor: '#FFF',\n        titleColor: '#FFF',\n        messageColor: '#FFF',\n        backgroundColor: '#EF4040',\n        progressBarColor: '#B51B1B',\n      });\n    }\n  },\n};\n\nfunction convertMsToTimerData(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction switchDisable(element, disabled) {\n  if (disabled) {\n    element.setAttribute('disabled', null);\n  } else {\n    element.removeAttribute('disabled');\n  }\n}\n\nfunction validateDate(date) {\n  if (!date) {\n    console.error('[validateDate] date is empty');\n    return false;\n  }\n\n  if (new Date().valueOf() >= date.valueOf()) {\n    console.error('[validateDate] date in the past');\n    return false;\n  }\n\n  return true;\n}\n\nfunction startTimer() {\n  if (timer || !selectedDate) {\n    return;\n  }\n\n  switchDisable(startButton, true);\n  switchDisable(datetimePickerInput, true);\n\n  updateTimer();\n\n  timer = setInterval(() => {\n    updateTimer();\n  }, 1000);\n}\n\nfunction updateTimer() {\n  const ms = selectedDate.valueOf() - new Date().valueOf();\n\n  if (ms <= 0) {\n    clearInterval(timer);\n    timer = null;\n    selectedDate = null;\n    switchDisable(datetimePickerInput, false);\n    updateTimerElements(defaultTimerData);\n    return;\n  }\n\n  updateTimerElements(convertMsToTimerData(ms));\n}\n\nfunction updateTimerElements(timerData) {\n  timerElements.forEach(timerElement => {\n    const dataAttr = Array.from(timerElement.attributes).find(attr =>\n      attr.name.startsWith('data-')\n    );\n\n    const dataItemName = dataAttr.name.replace('data-', '');\n\n    if (dataItemName in timerData) {\n      const newValue = formatTimerNumber(timerData[dataItemName]);\n\n      if (newValue !== timerElement.innerHTML) {\n        timerElement.innerHTML = newValue;\n      }\n    }\n  });\n}\n\nfunction formatTimerNumber(timerNumber) {\n  const timerNumberStr = `${timerNumber}`;\n  return timerNumberStr.length < 2 ? `0${timerNumberStr}` : timerNumberStr;\n}\n\nfunction initForm() {\n  flatpickr(datetimePickerInput, FLATPICKR_PICKER_OPTIONS);\n  startButton.addEventListener('click', () => startTimer());\n  switchDisable(startButton, true);\n  updateTimerElements(defaultTimerData);\n}\n\ninitForm();\n"],"names":["invalidDateMessage","defaultTimerData","datetimePickerInput","startButton","timerElements","timer","selectedDate","FLATPICKR_PICKER_OPTIONS","selectedDates","date","validateDate","switchDisable","iziToast","convertMsToTimerData","ms","days","hours","minutes","seconds","element","disabled","startTimer","updateTimer","updateTimerElements","timerData","timerElement","dataItemName","attr","newValue","formatTimerNumber","timerNumber","timerNumberStr","initForm","flatpickr"],"mappings":"2FAKA,MAAMA,EAAqB,qCACrBC,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAG,EAChEC,EAAsB,SAAS,cAAc,kBAAkB,EAC/DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAgB,SAAS,iBAAiB,sBAAsB,EACtE,IAAIC,EAAQ,KACRC,EAAe,KAEnB,MAAMC,EAA2B,CAC/B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAOD,EAAc,CAAC,EAC5B,QAAQ,IAAIC,CAAI,EACAC,EAAaD,CAAI,GAG/BE,EAAcR,EAAa,EAAK,EAChCG,EAAeG,IAEfE,EAAcR,EAAa,EAAI,EAC/BS,EAAS,MAAM,CACb,QAASZ,EACT,SAAU,WACV,UAAW,OACX,WAAY,OACZ,aAAc,OACd,gBAAiB,UACjB,iBAAkB,SAC1B,CAAO,EAEJ,CACH,EAEA,SAASa,EAAqBC,EAAI,CAQhC,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C,CAEA,SAASP,EAAcQ,EAASC,EAAU,CACpCA,EACFD,EAAQ,aAAa,WAAY,IAAI,EAErCA,EAAQ,gBAAgB,UAAU,CAEtC,CAEA,SAAST,EAAaD,EAAM,CAC1B,OAAKA,EAKD,IAAI,KAAI,EAAG,QAAS,GAAIA,EAAK,QAAO,GACtC,QAAQ,MAAM,iCAAiC,EACxC,IAGF,IATL,QAAQ,MAAM,8BAA8B,EACrC,GASX,CAEA,SAASY,GAAa,CAChBhB,GAAS,CAACC,IAIdK,EAAcR,EAAa,EAAI,EAC/BQ,EAAcT,EAAqB,EAAI,EAEvCoB,EAAa,EAEbjB,EAAQ,YAAY,IAAM,CACxBiB,EAAa,CACd,EAAE,GAAI,EACT,CAEA,SAASA,GAAc,CACrB,MAAMR,EAAKR,EAAa,QAAS,EAAG,IAAI,KAAM,EAAC,QAAS,EAExD,GAAIQ,GAAM,EAAG,CACX,cAAcT,CAAK,EACnBA,EAAQ,KACRC,EAAe,KACfK,EAAcT,EAAqB,EAAK,EACxCqB,EAAoBtB,CAAgB,EACpC,MACJ,CAEEsB,EAAoBV,EAAqBC,CAAE,CAAC,CAC9C,CAEA,SAASS,EAAoBC,EAAW,CACtCpB,EAAc,QAAQqB,GAAgB,CAKpC,MAAMC,EAJW,MAAM,KAAKD,EAAa,UAAU,EAAE,KAAKE,GACxDA,EAAK,KAAK,WAAW,OAAO,CAC7B,EAE6B,KAAK,QAAQ,QAAS,EAAE,EAEtD,GAAID,KAAgBF,EAAW,CAC7B,MAAMI,EAAWC,EAAkBL,EAAUE,CAAY,CAAC,EAEtDE,IAAaH,EAAa,YAC5BA,EAAa,UAAYG,EAEjC,CACA,CAAG,CACH,CAEA,SAASC,EAAkBC,EAAa,CACtC,MAAMC,EAAiB,GAAGD,CAAW,GACrC,OAAOC,EAAe,OAAS,EAAI,IAAIA,CAAc,GAAKA,CAC5D,CAEA,SAASC,GAAW,CAClBC,EAAU/B,EAAqBK,CAAwB,EACvDJ,EAAY,iBAAiB,QAAS,IAAMkB,EAAU,CAAE,EACxDV,EAAcR,EAAa,EAAI,EAC/BoB,EAAoBtB,CAAgB,CACtC,CAEA+B,EAAU"}