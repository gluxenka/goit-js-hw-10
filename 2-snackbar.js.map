{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import 'izitoast/dist/css/iziToast.min.css';\n\nimport iziToast from 'izitoast';\n\nconst form = document.querySelector('.form');\nconst radioButtons = document.querySelectorAll('input[name=\"state\"]');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\n\nfunction showSuccessMessage(delay) {\n  iziToast.success({\n    timeout: false,\n    message: `✅ Fulfilled promise in ${delay}ms`,\n    position: 'topRight',\n    iconColor: '#FFF',\n    titleColor: '#FFF',\n    messageColor: '#FFF',\n    backgroundColor: '#59A10D',\n    progressBarColor: '#326101',\n  });\n}\n\nfunction showErrorMessage(delay) {\n  iziToast.error({\n    timeout: false,\n    message: `❌ Rejected promise in ${delay}ms`,\n    position: 'topRight',\n    iconColor: '#FFF',\n    titleColor: '#FFF',\n    messageColor: '#FFF',\n    backgroundColor: '#EF4040',\n    progressBarColor: '#B51B1B',\n  });\n}\n\nfunction handleNotification(promise) {\n  promise.then(showSuccessMessage).catch(showErrorMessage);\n}\n\nfunction createNotification(state, delay) {\n  if (\n    !['fulfilled', 'rejected'].includes(state) ||\n    typeof delay !== 'number' ||\n    isNaN(delay)\n  ) {\n    return;\n  }\n\n  const delayedNotification = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'rejected') {\n        reject(delay);\n      }\n\n      if (state === 'fulfilled') {\n        resolve(delay);\n      }\n    }, delay);\n  });\n\n  handleNotification(delayedNotification);\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const formData = new FormData(form);\n  const formValues = Object.fromEntries(formData);\n  createNotification(formValues.state, Number(formValues.delay));\n  resetForm();\n}\n\nfunction resetForm() {\n  radioButtons.forEach(button => {\n    button.checked = false;\n  });\n\n  delayInput.value = '';\n}\n\nfunction init() {\n  form.addEventListener('submit', handleSubmit);\n}\n\ninit();\n"],"names":["form","radioButtons","delayInput","showSuccessMessage","delay","iziToast","showErrorMessage","handleNotification","promise","createNotification","state","delayedNotification","resolve","reject","handleSubmit","event","formData","formValues","resetForm","button","init"],"mappings":"+EAIA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAe,SAAS,iBAAiB,qBAAqB,EAC9DC,EAAa,SAAS,cAAc,qBAAqB,EAE/D,SAASC,EAAmBC,EAAO,CACjCC,EAAS,QAAQ,CACf,QAAS,GACT,QAAS,0BAA0BD,CAAK,KACxC,SAAU,WACV,UAAW,OACX,WAAY,OACZ,aAAc,OACd,gBAAiB,UACjB,iBAAkB,SACtB,CAAG,CACH,CAEA,SAASE,EAAiBF,EAAO,CAC/BC,EAAS,MAAM,CACb,QAAS,GACT,QAAS,yBAAyBD,CAAK,KACvC,SAAU,WACV,UAAW,OACX,WAAY,OACZ,aAAc,OACd,gBAAiB,UACjB,iBAAkB,SACtB,CAAG,CACH,CAEA,SAASG,EAAmBC,EAAS,CACnCA,EAAQ,KAAKL,CAAkB,EAAE,MAAMG,CAAgB,CACzD,CAEA,SAASG,EAAmBC,EAAON,EAAO,CACxC,GACE,CAAC,CAAC,YAAa,UAAU,EAAE,SAASM,CAAK,GACzC,OAAON,GAAU,UACjB,MAAMA,CAAK,EAEX,OAGF,MAAMO,EAAsB,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC3D,WAAW,IAAM,CACXH,IAAU,YACZG,EAAOT,CAAK,EAGVM,IAAU,aACZE,EAAQR,CAAK,CAEhB,EAAEA,CAAK,CACZ,CAAG,EAEDG,EAAmBI,CAAmB,CACxC,CAEA,SAASG,EAAaC,EAAO,CAC3BA,EAAM,eAAgB,EACtB,MAAMC,EAAW,IAAI,SAAShB,CAAI,EAC5BiB,EAAa,OAAO,YAAYD,CAAQ,EAC9CP,EAAmBQ,EAAW,MAAO,OAAOA,EAAW,KAAK,CAAC,EAC7DC,EAAW,CACb,CAEA,SAASA,GAAY,CACnBjB,EAAa,QAAQkB,GAAU,CAC7BA,EAAO,QAAU,EACrB,CAAG,EAEDjB,EAAW,MAAQ,EACrB,CAEA,SAASkB,GAAO,CACdpB,EAAK,iBAAiB,SAAUc,CAAY,CAC9C,CAEAM,EAAM"}